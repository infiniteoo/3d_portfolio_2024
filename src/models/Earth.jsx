/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.15 earth.glb 
Author: StÃ©phane Agullo (https://sketchfab.com/sa3d)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/earth-5ce4b1465c83432d9bb7e3c30232c02b
Title: EARTH
*/

import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { a } from "@react-spring/three";
import earthScene from "../assets/3d/earth.glb";
import { useFrame, useThree } from "@react-three/fiber";

const Earth = ({
  isRotating,
  setIsRotating,
  setCurrentStage,
  currentFocusPoint,
  ...props
}) => {
  const { gl, viewport } = useThree();
  const earthRef = useRef();
  const { nodes, materials, animations } = useGLTF(earthScene);
  const { actions } = useAnimations(animations, earthRef);

  // Use a ref for the last mouse x position
  const lastX = useRef(0);
  // Use a ref for rotation speed
  const rotationSpeed = useRef(0);
  // Define a damping factor to control rotation damping
  const dampingFactor = 0.95;

  useFrame(() => {
    // If not rotating, apply damping to slow down the rotation (smoothly)
    if (!isRotating) {
      // Apply damping factor
      rotationSpeed.current *= dampingFactor;

      // Stop rotation when speed is very small
      if (Math.abs(rotationSpeed.current) < 0.001) {
        rotationSpeed.current = 0;
      }

      earthRef.current.rotation.y += rotationSpeed.current;
    } else {
      // When rotating, determine the current stage based on island's orientation
      const rotation = earthRef.current.rotation.y;

      /**
       * Normalize the rotation value to ensure it stays within the range [0, 2 * Math.PI].
       * The goal is to ensure that the rotation value remains within a specific range to
       * prevent potential issues with very large or negative rotation values.
       *  Here's a step-by-step explanation of what this code does:
       *  1. rotation % (2 * Math.PI) calculates the remainder of the rotation value when divided
       *     by 2 * Math.PI. This essentially wraps the rotation value around once it reaches a
       *     full circle (360 degrees) so that it stays within the range of 0 to 2 * Math.PI.
       *  2. (rotation % (2 * Math.PI)) + 2 * Math.PI adds 2 * Math.PI to the result from step 1.
       *     This is done to ensure that the value remains positive and within the range of
       *     0 to 2 * Math.PI even if it was negative after the modulo operation in step 1.
       *  3. Finally, ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI) applies another
       *     modulo operation to the value obtained in step 2. This step guarantees that the value
       *     always stays within the range of 0 to 2 * Math.PI, which is equivalent to a full
       *     circle in radians.
       */
      const normalizedRotation =
        ((rotation % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI);

      // Set the current stage based on the island's orientation
      switch (true) {
        case normalizedRotation >= 5.45 && normalizedRotation <= 5.85:
          setCurrentStage(4);
          break;
        case normalizedRotation >= 0.85 && normalizedRotation <= 1.3:
          setCurrentStage(3);
          break;
        case normalizedRotation >= 2.4 && normalizedRotation <= 2.6:
          setCurrentStage(2);
          break;
        case normalizedRotation >= 4.25 && normalizedRotation <= 4.75:
          setCurrentStage(1);
          break;
        default:
          setCurrentStage(null);
      }
    }
  });
  return (
    <group ref={earthRef} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]} scale={1}>
          <group
            name="5fbd3316863b4d98adffc1dec302e69efbx"
            rotation={[Math.PI / 2, 0, 0]}
          >
            <group name="Object_2">
              <group name="RootNode">
                <group name="EARTHLayer1">
                  <mesh
                    name="EARTHLayer1_TERRE_0"
                    geometry={nodes.EARTHLayer1_TERRE_0.geometry}
                    material={materials.TERRE}
                  />
                </group>
                <group name="EARTHLayer2">
                  <mesh
                    name="EARTHLayer2_NUAGES_0"
                    geometry={nodes.EARTHLayer2_NUAGES_0.geometry}
                    material={materials.NUAGES}
                  />
                </group>
                <group name="EARTHLayer3">
                  <mesh
                    name="EARTHLayer3_01_0"
                    geometry={nodes.EARTHLayer3_01_0.geometry}
                    material={materials.material}
                  />
                </group>
                <group name="EARTHLayer4">
                  <mesh
                    name="EARTHLayer4_02_0"
                    geometry={nodes.EARTHLayer4_02_0.geometry}
                    material={materials.material_3}
                  />
                </group>
                <group name="EARTHLayer5">
                  <mesh
                    name="EARTHLayer5_03_0"
                    geometry={nodes.EARTHLayer5_03_0.geometry}
                    material={materials.material_4}
                  />
                </group>
                <group name="EARTHLayer6">
                  <mesh
                    name="EARTHLayer6_04_0"
                    geometry={nodes.EARTHLayer6_04_0.geometry}
                    material={materials.material_5}
                  />
                </group>
                <group name="EARTHLayer7">
                  <mesh
                    name="EARTHLayer7_05_0"
                    geometry={nodes.EARTHLayer7_05_0.geometry}
                    material={materials.material_6}
                  />
                </group>
                <group name="EARTHLayer8">
                  <mesh
                    name="EARTHLayer8_06_0"
                    geometry={nodes.EARTHLayer8_06_0.geometry}
                    material={materials.material_7}
                  />
                </group>
              </group>
            </group>
          </group>
        </group>
      </group>
    </group>
  );
};

export default Earth;
